# Base docker-compose file for rancher in staging environment
# This file has some specific tweaks for staging environment
# You can copy this file and paste it when creating a new stack in rancher
# It will try to sync related files

# Rancher currently only supports up to version 2
# If you want to use docker-swarm, create another orchestration with version 3
version: '2'
volumes:
  activity-logs:

services:

  db:
    image: kartoza/postgis:9.6-2.4
    volumes:
      # Don't use a storage volume - the wal logs grow large 
      # over time and can fill up the disk.
      # Also the app by design does not need persistance 
      #- 'postgis-data:/var/lib/postgresql'
      - 'backups:/backups'
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
    expose:
      - 5432 
    restart: unless-stopped
    labels:
      io.rancher.container.pull_image: always

  web:
    image: kartoza/osm-reporter:stable
    hostname: web
    environment:
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGHOST=db
      - CREW=${CREW}
      - BBOX=${BBOX}
      - CACHE_DIR=${CACHE_DIR}
      - LOG_DIR=${LOG_DIR}  
    depends_on:
      - db
    # do not expose using ports since we want to be able to spin up multiple
    # copies on a single # server if needed
    expose:
      - 8080
    links:
      - db:db
    volumes:
      - activity-logs:/logs:rw
    labels:
      io.rancher.container.pull_image: always
      # Each web instance gets it's own db instance
      io.rancher.sidekicks: db
    restart: unless-stopped

  # Web load balancer
  web-lb:
    image: rancher/lb-service-haproxy:v0.7.9
    ports:
      - "80:80"
    links:
      - web:web
    labels:
      io.rancher.container.agent.role: environmentAdmin
      io.rancher.container.create_agent: 'true'
    restart: unless-stopped

  btsync-logs:
    # BTSync backups for activity logs
    image: kartoza/btsync
    hostname: btsync-media
    restart: unless-stopped
    # activity logs is mounted as /logs in web container and 
    # as /web in btsync because btsync expects it there
    volumes:
      - activity-logs:/web:rw
    environment:
      - SECRET=${BTSYNC_MEDIA_SECRET}
      - DEVICE=OSMLogs

