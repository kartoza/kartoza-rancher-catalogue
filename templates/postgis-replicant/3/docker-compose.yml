version: '2'


services:
  
  pg-slave:
    image: kartoza/postgis:12.0
    # You can optionally mount to volume, but we're not able to scale it
    # in that case.
    # The slave will always destroy its database and copy from master at
    # runtime
    volumes:
      - {{ .Stack.Name }}-postgis-data:/var/lib/postgresql
    environment:
      # ALLOW_IP_RANGE option is used to specify additionals allowed domains
      # in pg_hba.
      # Not really needed in slaves for the replication, but optionally can
      # be put when slaves are needed to be a failover server when master
      # is down. The IP Range are generally needed if other services wants to
      # connect to this slave
      ALLOW_IP_RANGE: ${POSTGRES_HBA_RANGE}

      # REPLICATE_FROM options accepts domain-name or IP address
      # with this in mind, you can also put docker service name, because it
      # will be resolved as host name.
      REPLICATE_FROM: ${POSTGRES_MASTER_HOST}

      # REPLICATE_PORT will default to 5432 if not specified.
      # REPLICATE_PORT: '5432'
      # In the case where you need to replicate from outside service,
      # you can put the server address and port here, as long as the target
      # where configured as master, and replicable.
      REPLICATE_PORT: ${POSTGRES_MASTER_PORT}

      # DESTROY_DATABASE_ON_RESTART will default to True if not specified.
      # If specified other than True, it will prevent slave from destroying
      # database on restart
      # True or False
      DESTROY_DATABASE_ON_RESTART: ${DESTROY_ON_RESTART}

      # PROMOTE_MASTER Default empty.
      # If specified with any value, then it will convert current slave into
      # a writable state. Useful if master is down and the current slave needs
      # to be promoted until manual recovery.
      # True or False
      PROMOTE_MASTER: ${PROMOTE_TO_MASTER}

      # For now we don't support different credentials for replication
      # so we use the same credentials as master's superuser, or anything that
      # have replication role.
      REPLICATION_USER: ${REPLICATION_USER}
      REPLICATION_PASS: ${REPLICATION_PASS}
      IP_LIST: ${ALLOW_LISTEN_RANGE}
    # You can expose the port to observe it in your local machine
    # For this sample, it was disabled by default to allow scaling test
    ports:
      - ${POSTGRES_PORT}:5432 
    restart: unless-stopped
  
